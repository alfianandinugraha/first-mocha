{
  "stats": {
    "suites": 4,
    "tests": 18,
    "passes": 18,
    "pending": 0,
    "failures": 0,
    "start": "2022-02-28T18:20:11.381Z",
    "end": "2022-02-28T18:20:11.431Z",
    "duration": 50,
    "testsRegistered": 18,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6b324058-1733-43f0-bdf1-ef2dcd7eddc4",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f5414b20-6e9c-47ac-a99b-27668891314d",
          "title": "Calculate.js test",
          "fullFile": "F:\\project-local\\Mocha\\mocha-demo-test\\tests\\Calculate.test.js",
          "file": "\\tests\\Calculate.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Calculate.js test\"",
              "fullTitle": "Calculate.js test \"before each\" hook in \"Calculate.js test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "calculate = new Calculate();",
              "err": {},
              "uuid": "28418c67-b6a6-4f8f-9b23-7b12d03e6450",
              "parentUUID": "f5414b20-6e9c-47ac-a99b-27668891314d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Arguments of add() should be number",
              "fullTitle": "Calculate.js test Arguments of add() should be number",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => calculate.add(\"2\", \"1\")).to.throw(\n  Calculate.messages.INVALID_TYPES\n);",
              "err": {},
              "uuid": "4703bb9f-351a-406d-951d-079ada6a8a84",
              "parentUUID": "f5414b20-6e9c-47ac-a99b-27668891314d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Argument of addBy2() should be a number",
              "fullTitle": "Calculate.js test Argument of addBy2() should be a number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => calculate.addBy2(\"9\")).to.throw(\n  Calculate.messages.INVALID_TYPES\n);",
              "err": {},
              "uuid": "9f5c1883-616a-4861-86fe-ec803daa9198",
              "parentUUID": "f5414b20-6e9c-47ac-a99b-27668891314d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Arguments of addCb() should be number and a function",
              "fullTitle": "Calculate.js test Arguments of addCb() should be number and a function",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => calculate.addCb(\"9\", \"2\", true)).to.throw(\n  Calculate.messages.INVALID_TYPES\n);",
              "err": {},
              "uuid": "e5700a27-a043-4740-ba43-7241bf1d7f15",
              "parentUUID": "f5414b20-6e9c-47ac-a99b-27668891314d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Calculate 2 + 5 = 7",
              "fullTitle": "Calculate.js test Calculate 2 + 5 = 7",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculate.add(2, 5)).to.be.equal(7);",
              "err": {},
              "uuid": "70865757-4e46-446b-be52-f29b722d0789",
              "parentUUID": "f5414b20-6e9c-47ac-a99b-27668891314d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Calculate 2 + 2 != 5",
              "fullTitle": "Calculate.js test Calculate 2 + 2 != 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculate.add(2, 2)).to.not.equal(5);",
              "err": {},
              "uuid": "b13cdb95-a730-4cd3-a15a-5653d8aa9768",
              "parentUUID": "f5414b20-6e9c-47ac-a99b-27668891314d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Calculate 5 with addBy2()",
              "fullTitle": "Calculate.js test Calculate 5 with addBy2()",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculate.addBy2(5)).to.be.equal(7);",
              "err": {},
              "uuid": "36b9c8aa-25f2-4c14-967b-1bdf3d574720",
              "parentUUID": "f5414b20-6e9c-47ac-a99b-27668891314d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Spy add() on addBy2()",
              "fullTitle": "Calculate.js test Spy add() on addBy2()",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const calculateSpy = spy(calculate, \"add\");\ncalculate.addBy2(2);\nexpect(calculateSpy.calledOnce).to.be.true;",
              "err": {},
              "uuid": "f92e1afa-bceb-40b1-ac62-2df24c267faa",
              "parentUUID": "f5414b20-6e9c-47ac-a99b-27668891314d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Spy argument add() in addBy2()",
              "fullTitle": "Calculate.js test Spy argument add() in addBy2()",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const num = 5;\nconst calculateSpy = spy(calculate, \"add\");\ncalculate.addBy2(5);\nexpect(calculateSpy.calledOnceWith(num, 2)).to.be.true;",
              "err": {},
              "uuid": "b667b38e-77b7-41a4-866d-d89fc2bcb0fa",
              "parentUUID": "f5414b20-6e9c-47ac-a99b-27668891314d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Spy callback in addCb()",
              "fullTitle": "Calculate.js test Spy callback in addCb()",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const cbResult = spy();\ncalculate.addCb(7, 2, cbResult);\nexpect(cbResult.calledOnce).to.be.true;",
              "err": {},
              "uuid": "f5c8d50b-e7c8-4cba-a067-8eee52d600e1",
              "parentUUID": "f5414b20-6e9c-47ac-a99b-27668891314d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4703bb9f-351a-406d-951d-079ada6a8a84",
            "9f5c1883-616a-4861-86fe-ec803daa9198",
            "e5700a27-a043-4740-ba43-7241bf1d7f15",
            "70865757-4e46-446b-be52-f29b722d0789",
            "b13cdb95-a730-4cd3-a15a-5653d8aa9768",
            "36b9c8aa-25f2-4c14-967b-1bdf3d574720",
            "f92e1afa-bceb-40b1-ac62-2df24c267faa",
            "b667b38e-77b7-41a4-866d-d89fc2bcb0fa",
            "f5c8d50b-e7c8-4cba-a067-8eee52d600e1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fd6ac64e-aa62-49da-bf98-9860f45a3562",
          "title": "Product.js test",
          "fullFile": "F:\\project-local\\Mocha\\mocha-demo-test\\tests\\Product.test.js",
          "file": "\\tests\\Product.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Product.js test\"",
              "fullTitle": "Product.js test \"before each\" hook in \"Product.js test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "database = new Database();\nproduct = new Product(database);",
              "err": {},
              "uuid": "2fe13679-cfaf-4045-93e2-66721f47598a",
              "parentUUID": "fd6ac64e-aa62-49da-bf98-9860f45a3562",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check database name with mock",
              "fullTitle": "Product.js test Check database name with mock",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let databaseMock = mock(database);\ndatabaseMock.expects(\"DB\").once().returns(\"TEST_DB\");\nexpect(product.getDB()).to.be.equal(\"TEST_DB\");",
              "err": {},
              "uuid": "6ff303c6-2bf7-4b52-a3a1-f243af32bb33",
              "parentUUID": "fd6ac64e-aa62-49da-bf98-9860f45a3562",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify isConnect() called",
              "fullTitle": "Product.js test Verify isConnect() called",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let databaseMock = mock(database);\nlet isConnectMock = databaseMock.expects(\"isConnect\").returns(true);\nproduct.find(\"84719\");\nexpect(isConnectMock.calledOnce).to.be.true;",
              "err": {},
              "uuid": "f066cc46-a156-4834-8e10-5e49f4bc1f9e",
              "parentUUID": "fd6ac64e-aa62-49da-bf98-9860f45a3562",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Throw error when database is not connected",
              "fullTitle": "Product.js test Throw error when database is not connected",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let databaseStub = stub(database, \"isConnect\");\ndatabaseStub.returns(false);\nexpect(() => product.find(\"2389\")).to.throw(Database.messages.NOT_CONNECT);",
              "err": {},
              "uuid": "994adb72-9dde-4b85-bdbf-35961e630921",
              "parentUUID": "fd6ac64e-aa62-49da-bf98-9860f45a3562",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ff303c6-2bf7-4b52-a3a1-f243af32bb33",
            "f066cc46-a156-4834-8e10-5e49f4bc1f9e",
            "994adb72-9dde-4b85-bdbf-35961e630921"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4732808a-3ad6-4566-940c-d099f89678aa",
          "title": "Auth.js test",
          "fullFile": "F:\\project-local\\Mocha\\mocha-demo-test\\tests\\User.test.js",
          "file": "\\tests\\User.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Auth.js test\"",
              "fullTitle": "Auth.js test \"before each\" hook in \"Auth.js test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "auth = new Auth();",
              "err": {},
              "uuid": "aaa7cdc7-96fc-4307-9e0f-76e17d855344",
              "parentUUID": "4732808a-3ad6-4566-940c-d099f89678aa",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Register user",
              "fullTitle": "Auth.js test Register user",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const email = \"hello@hello.com\";\nconst password = \"hello\";\nexpect(auth.register(email, password)).to.be.deep.equal({\n  email,\n  password,\n  message: Auth.messages.REGISTER_SUCCESS,\n});",
              "err": {},
              "uuid": "5240ec54-7528-45f9-ab40-3f98a22f8ef7",
              "parentUUID": "4732808a-3ad6-4566-940c-d099f89678aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Throw error on register() if database not connected",
              "fullTitle": "Auth.js test Throw error on register() if database not connected",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const email = \"hello@hello.com\";\nconst password = \"hello\";\nconst databaseMock = stub(Database.prototype, \"isConnect\");\ndatabaseMock.returns(false);\nexpect(() => auth.register(email, password)).to.throw(\n  Database.messages.NOT_CONNECT\n);\ndatabaseMock.restore();",
              "err": {},
              "uuid": "366656d2-2e85-4030-a817-ca65f84d9570",
              "parentUUID": "4732808a-3ad6-4566-940c-d099f89678aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Register user with hello.com email",
              "fullTitle": "Auth.js test Register user with hello.com email",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const email = \"hello.com\";\nconst password = \"hello\";\nexpect(() => auth.register(email, password)).to.throw(\n  Validator.messages.INVALID_EMAIL\n);",
              "err": {},
              "uuid": "44e86598-510a-43bd-a1dd-7ea961aff8f8",
              "parentUUID": "4732808a-3ad6-4566-940c-d099f89678aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validator.isEmail() called on register()",
              "fullTitle": "Auth.js test Validator.isEmail() called on register()",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const email = \"hello@hello.com\";\nconst password = \"hello\";\nconst validatorSpy = spy(Validator, \"isEmail\");\nauth.register(email, password);\nexpect(validatorSpy.calledOnce).to.be.true;",
              "err": {},
              "uuid": "68dc20d8-fe9d-4ec9-9d26-5d43067f5342",
              "parentUUID": "4732808a-3ad6-4566-940c-d099f89678aa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5240ec54-7528-45f9-ab40-3f98a22f8ef7",
            "366656d2-2e85-4030-a817-ca65f84d9570",
            "44e86598-510a-43bd-a1dd-7ea961aff8f8",
            "68dc20d8-fe9d-4ec9-9d26-5d43067f5342"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "65e62705-2c68-4329-bba6-c5d4341baeea",
          "title": "Validator.js test",
          "fullFile": "F:\\project-local\\Mocha\\mocha-demo-test\\tests\\Validator.test.js",
          "file": "\\tests\\Validator.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check hello@hello.com email",
              "fullTitle": "Validator.js test Check hello@hello.com email",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Validator.isEmail(\"hello@hello.com\")).to.be.true;",
              "err": {},
              "uuid": "737a5007-fce8-4bb1-a19f-376eb9fb2704",
              "parentUUID": "65e62705-2c68-4329-bba6-c5d4341baeea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check hello.com email",
              "fullTitle": "Validator.js test Check hello.com email",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Validator.isEmail(\"hello.com\")).to.be.false;",
              "err": {},
              "uuid": "139c804c-0440-41a7-8618-528941d83e14",
              "parentUUID": "65e62705-2c68-4329-bba6-c5d4341baeea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "737a5007-fce8-4bb1-a19f-376eb9fb2704",
            "139c804c-0440-41a7-8618-528941d83e14"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "index"
      },
      "version": "6.1.0"
    }
  }
}