{
  "stats": {
    "suites": 4,
    "tests": 18,
    "passes": 18,
    "pending": 0,
    "failures": 0,
    "start": "2022-02-28T18:24:15.245Z",
    "end": "2022-02-28T18:24:15.303Z",
    "duration": 58,
    "testsRegistered": 18,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2f76d052-9174-4160-8307-2146b395549d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e92fb6ff-edee-411a-8e9a-cf6190dabbb5",
          "title": "Calculate.js test",
          "fullFile": "F:\\project-local\\Mocha\\first-mocha\\tests\\Calculate.test.js",
          "file": "\\tests\\Calculate.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Calculate.js test\"",
              "fullTitle": "Calculate.js test \"before each\" hook in \"Calculate.js test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "calculate = new Calculate();",
              "err": {},
              "uuid": "ff5f7b21-3704-444c-90be-7a6d9ed42d79",
              "parentUUID": "e92fb6ff-edee-411a-8e9a-cf6190dabbb5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Arguments of add() should be number",
              "fullTitle": "Calculate.js test Arguments of add() should be number",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => calculate.add(\"2\", \"1\")).to.throw(\n  Calculate.messages.INVALID_TYPES\n);",
              "err": {},
              "uuid": "6b523fe7-b648-4019-9e3f-f0662a75b230",
              "parentUUID": "e92fb6ff-edee-411a-8e9a-cf6190dabbb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Argument of addBy2() should be a number",
              "fullTitle": "Calculate.js test Argument of addBy2() should be a number",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => calculate.addBy2(\"9\")).to.throw(\n  Calculate.messages.INVALID_TYPES\n);",
              "err": {},
              "uuid": "ea800ecb-5ea9-4717-886e-338354d5b89d",
              "parentUUID": "e92fb6ff-edee-411a-8e9a-cf6190dabbb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Arguments of addCb() should be number and a function",
              "fullTitle": "Calculate.js test Arguments of addCb() should be number and a function",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => calculate.addCb(\"9\", \"2\", true)).to.throw(\n  Calculate.messages.INVALID_TYPES\n);",
              "err": {},
              "uuid": "f5d251af-1e91-44d6-8d88-e12be5be228e",
              "parentUUID": "e92fb6ff-edee-411a-8e9a-cf6190dabbb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Calculate 2 + 5 = 7",
              "fullTitle": "Calculate.js test Calculate 2 + 5 = 7",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculate.add(2, 5)).to.be.equal(7);",
              "err": {},
              "uuid": "8e78cea5-148f-4202-9609-3725df99f324",
              "parentUUID": "e92fb6ff-edee-411a-8e9a-cf6190dabbb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Calculate 2 + 2 != 5",
              "fullTitle": "Calculate.js test Calculate 2 + 2 != 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculate.add(2, 2)).to.not.equal(5);",
              "err": {},
              "uuid": "85514c96-5f85-4a65-bdc7-b25e75b1a3fd",
              "parentUUID": "e92fb6ff-edee-411a-8e9a-cf6190dabbb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Calculate 5 with addBy2()",
              "fullTitle": "Calculate.js test Calculate 5 with addBy2()",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculate.addBy2(5)).to.be.equal(7);",
              "err": {},
              "uuid": "2f295d9d-27d6-4fc2-9e90-daf1c78ff741",
              "parentUUID": "e92fb6ff-edee-411a-8e9a-cf6190dabbb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Spy add() on addBy2()",
              "fullTitle": "Calculate.js test Spy add() on addBy2()",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const calculateSpy = spy(calculate, \"add\");\ncalculate.addBy2(2);\nexpect(calculateSpy.calledOnce).to.be.true;",
              "err": {},
              "uuid": "f790d0ee-23ef-4486-b1b5-0af2927cbe45",
              "parentUUID": "e92fb6ff-edee-411a-8e9a-cf6190dabbb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Spy argument add() in addBy2()",
              "fullTitle": "Calculate.js test Spy argument add() in addBy2()",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const num = 5;\nconst calculateSpy = spy(calculate, \"add\");\ncalculate.addBy2(5);\nexpect(calculateSpy.calledOnceWith(num, 2)).to.be.true;",
              "err": {},
              "uuid": "03ccede4-9c51-4e15-bea2-320226d0b34d",
              "parentUUID": "e92fb6ff-edee-411a-8e9a-cf6190dabbb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Spy callback in addCb()",
              "fullTitle": "Calculate.js test Spy callback in addCb()",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const cbResult = spy();\ncalculate.addCb(7, 2, cbResult);\nexpect(cbResult.calledOnce).to.be.true;",
              "err": {},
              "uuid": "c958e1db-69c4-4454-a581-0b910e0d1acd",
              "parentUUID": "e92fb6ff-edee-411a-8e9a-cf6190dabbb5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b523fe7-b648-4019-9e3f-f0662a75b230",
            "ea800ecb-5ea9-4717-886e-338354d5b89d",
            "f5d251af-1e91-44d6-8d88-e12be5be228e",
            "8e78cea5-148f-4202-9609-3725df99f324",
            "85514c96-5f85-4a65-bdc7-b25e75b1a3fd",
            "2f295d9d-27d6-4fc2-9e90-daf1c78ff741",
            "f790d0ee-23ef-4486-b1b5-0af2927cbe45",
            "03ccede4-9c51-4e15-bea2-320226d0b34d",
            "c958e1db-69c4-4454-a581-0b910e0d1acd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7581823b-e736-49c6-868a-0fc509667541",
          "title": "Product.js test",
          "fullFile": "F:\\project-local\\Mocha\\first-mocha\\tests\\Product.test.js",
          "file": "\\tests\\Product.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Product.js test\"",
              "fullTitle": "Product.js test \"before each\" hook in \"Product.js test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "database = new Database();\nproduct = new Product(database);",
              "err": {},
              "uuid": "bad90be2-45b0-4fd5-8710-99cca63cb9ad",
              "parentUUID": "7581823b-e736-49c6-868a-0fc509667541",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check database name with mock",
              "fullTitle": "Product.js test Check database name with mock",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let databaseMock = mock(database);\ndatabaseMock.expects(\"DB\").once().returns(\"TEST_DB\");\nexpect(product.getDB()).to.be.equal(\"TEST_DB\");",
              "err": {},
              "uuid": "e3356590-9f38-4c7d-9885-7335be9edd07",
              "parentUUID": "7581823b-e736-49c6-868a-0fc509667541",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify isConnect() called",
              "fullTitle": "Product.js test Verify isConnect() called",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let databaseMock = mock(database);\nlet isConnectMock = databaseMock.expects(\"isConnect\").returns(true);\nproduct.find(\"84719\");\nexpect(isConnectMock.calledOnce).to.be.true;",
              "err": {},
              "uuid": "75bb3304-7b3e-4a23-bdf9-136961a88e70",
              "parentUUID": "7581823b-e736-49c6-868a-0fc509667541",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Throw error when database is not connected",
              "fullTitle": "Product.js test Throw error when database is not connected",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let databaseStub = stub(database, \"isConnect\");\ndatabaseStub.returns(false);\nexpect(() => product.find(\"2389\")).to.throw(Database.messages.NOT_CONNECT);",
              "err": {},
              "uuid": "cbb3b46c-7e54-4d9d-80c0-67d440217362",
              "parentUUID": "7581823b-e736-49c6-868a-0fc509667541",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e3356590-9f38-4c7d-9885-7335be9edd07",
            "75bb3304-7b3e-4a23-bdf9-136961a88e70",
            "cbb3b46c-7e54-4d9d-80c0-67d440217362"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c252ebac-35bb-46f3-9048-24540ef6c056",
          "title": "Auth.js test",
          "fullFile": "F:\\project-local\\Mocha\\first-mocha\\tests\\User.test.js",
          "file": "\\tests\\User.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Auth.js test\"",
              "fullTitle": "Auth.js test \"before each\" hook in \"Auth.js test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "auth = new Auth();",
              "err": {},
              "uuid": "58cb3901-873c-44ad-bb15-617d30d496cf",
              "parentUUID": "c252ebac-35bb-46f3-9048-24540ef6c056",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Register user",
              "fullTitle": "Auth.js test Register user",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const email = \"hello@hello.com\";\nconst password = \"hello\";\nexpect(auth.register(email, password)).to.be.deep.equal({\n  email,\n  password,\n  message: Auth.messages.REGISTER_SUCCESS,\n});",
              "err": {},
              "uuid": "24786401-c666-45c7-a5cd-52195acb61f3",
              "parentUUID": "c252ebac-35bb-46f3-9048-24540ef6c056",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Throw error on register() if database not connected",
              "fullTitle": "Auth.js test Throw error on register() if database not connected",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const email = \"hello@hello.com\";\nconst password = \"hello\";\nconst databaseMock = stub(Database.prototype, \"isConnect\");\ndatabaseMock.returns(false);\nexpect(() => auth.register(email, password)).to.throw(\n  Database.messages.NOT_CONNECT\n);\ndatabaseMock.restore();",
              "err": {},
              "uuid": "09bb0a47-0a90-4856-8e93-f4f1863d88b8",
              "parentUUID": "c252ebac-35bb-46f3-9048-24540ef6c056",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Register user with hello.com email",
              "fullTitle": "Auth.js test Register user with hello.com email",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const email = \"hello.com\";\nconst password = \"hello\";\nexpect(() => auth.register(email, password)).to.throw(\n  Validator.messages.INVALID_EMAIL\n);",
              "err": {},
              "uuid": "84b8fa20-8170-4480-9ef3-9b63fcb9c7a4",
              "parentUUID": "c252ebac-35bb-46f3-9048-24540ef6c056",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validator.isEmail() called on register()",
              "fullTitle": "Auth.js test Validator.isEmail() called on register()",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const email = \"hello@hello.com\";\nconst password = \"hello\";\nconst validatorSpy = spy(Validator, \"isEmail\");\nauth.register(email, password);\nexpect(validatorSpy.calledOnce).to.be.true;",
              "err": {},
              "uuid": "18c9ac18-be67-4316-a69a-7e268d5c3fb2",
              "parentUUID": "c252ebac-35bb-46f3-9048-24540ef6c056",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "24786401-c666-45c7-a5cd-52195acb61f3",
            "09bb0a47-0a90-4856-8e93-f4f1863d88b8",
            "84b8fa20-8170-4480-9ef3-9b63fcb9c7a4",
            "18c9ac18-be67-4316-a69a-7e268d5c3fb2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f17ff426-6c9e-4bfe-9009-77d8257e2bcd",
          "title": "Validator.js test",
          "fullFile": "F:\\project-local\\Mocha\\first-mocha\\tests\\Validator.test.js",
          "file": "\\tests\\Validator.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check hello@hello.com email",
              "fullTitle": "Validator.js test Check hello@hello.com email",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Validator.isEmail(\"hello@hello.com\")).to.be.true;",
              "err": {},
              "uuid": "8b73ca59-e118-484a-8af2-2b4078836236",
              "parentUUID": "f17ff426-6c9e-4bfe-9009-77d8257e2bcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check hello.com email",
              "fullTitle": "Validator.js test Check hello.com email",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Validator.isEmail(\"hello.com\")).to.be.false;",
              "err": {},
              "uuid": "8d7884e2-c5fa-40c1-a20c-1c357e44edff",
              "parentUUID": "f17ff426-6c9e-4bfe-9009-77d8257e2bcd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b73ca59-e118-484a-8af2-2b4078836236",
            "8d7884e2-c5fa-40c1-a20c-1c357e44edff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "index"
      },
      "version": "6.1.0"
    }
  }
}